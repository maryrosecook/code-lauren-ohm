CodeLauren {
  Start = ExpressionList

  ExpressionList = listOf<Expression, eol>
  Expression = Invocation | Conditional | Assignment | Lambda | Literal

  Lambda = "{" ParameterList ExpressionList "}"

  Invocation = Invocable ApplicationList

  Invocable = Conditional | Lambda | identifier

  ApplicationList = Application+
  Application = "(" ArgumentList ")"
  ArgumentList = listOf<Expression, space>

  ParameterList = listOf<Parameter, space>
  Parameter = "?" identifier

  Assignment = identifier ":" Expression

  Conditional = If
  If = "if" Expression Lambda (Elseif | Else)*
  Elseif = "elseif" Expression Lambda (Elseif | Else)*
  Else = "else" Lambda

  Literal = number | string | identifier | boolean

  number = "-"? digit+ ("." digit+)?

  string = "\"" (alnum | "-" | "." | "," | "#" | space)* "\""

  identifier = ~keyword letter+ alnum*

  boolean = "true" | "false"

  keyword = "if" | "elseif" | "else" | "forever" | "true" | "false"

  eol = space_no_newline* "\n" space_no_newline*
  space_no_newline = " " | "\r" | "\t"
}
